{"remainingRequest":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js!D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\vuecli2\\src\\components\\Resgit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\vuecli2\\src\\components\\Resgit.vue","mtime":1658890663991},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js","mtime":1657605656602},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js","mtime":1657605655389}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'Resgit',\n  data: function data() {\n    var _this = this;\n\n    var validateUserName = function validateUserName(rule, value, callback) {\n      if (value == '') {\n        callback(new Error('请输入用户名'));\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this.ruleForm.checkPass !== '') {\n          _this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        userName: '',\n        pass: '',\n        checkPass: '',\n        userType: '5'\n      },\n      rules: {\n        userName: [{\n          validator: validateUserName,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      axios.post('http://localhost:8080/user/adduser', {\n        data: {\n          username: this.ruleForm.userName,\n          password: this.ruleForm.pass,\n          usertype: this.ruleForm.userType\n        }\n      }).then(function (res) {\n        alert('注册成功');\n      }, function (error) {\n        alert('失败');\n        console.log(error.message);\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"sources":["Resgit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,IAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACA;AACA,KAJA;;AAKA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,SAAA,KAAA,EAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,aAAA,CAAA,WAAA;AACA;;AACA,QAAA,QAAA;AACA;AACA,KATA;;AAUA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KARA;;AASA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OADA;AAOA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,SAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,IAAA,EAAA,CACA;AAAA,UAAA,SAAA,EAAA,YAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAJA;AAOA,QAAA,SAAA,EAAA,CACA;AAAA,UAAA,SAAA,EAAA,aAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AAPA;AAPA,KAAA;AAoBA,GA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,oCAAA,EAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,QAAA,EAAA,KAAA,QAAA,CAAA,QADA;AAEA,UAAA,QAAA,EAAA,KAAA,QAAA,CAAA,IAFA;AAGA,UAAA,QAAA,EAAA,KAAA,QAAA,CAAA;AAHA;AADA,OAAA,EAOA,IAPA,CAOA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA;AACA,OATA,EASA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA;AACA,OAZA;AAcA,KAhBA;AAiBA,IAAA,SAjBA,qBAiBA,QAjBA,EAiBA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AACA;AAnBA;AAhDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"resgit\">\r\n    <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"用户名\" prop=\"userName\">\r\n            <el-input type=\"text\" autocomplete=\"off\" v-model=\"ruleForm.userName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm\">注册</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name:'Resgit',\r\n    data() {\r\n        var validateUserName=(rule,value,callback)=>{\r\n          if(value==''){\r\n            callback(new Error('请输入用户名'))\r\n          }\r\n        }\r\n        var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.pass) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        ruleForm: {\r\n            userName:'',\r\n            pass: '',\r\n            checkPass: '',\r\n            userType:'5'\r\n        },\r\n        rules: {\r\n          userName:[\r\n            {validator:validateUserName,trigger:'blur'}\r\n          ],\r\n          pass: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          \r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      submitForm() {\r\n        axios.post('http://localhost:8080/user/adduser',{\r\n          data:{\r\n              username:this.ruleForm.userName,\r\n              password:this.ruleForm.pass,\r\n              usertype:this.ruleForm.userType,\r\n            \r\n          }\r\n        }).then(res=>{\r\n          alert('注册成功')\r\n        },error=>{\r\n          alert('失败')\r\n          console.log(error.message);\r\n        }\r\n        )\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.resgit{\r\n    height: 350px;\r\n    width: 400px;\r\n\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}