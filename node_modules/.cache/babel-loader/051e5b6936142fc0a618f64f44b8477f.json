{"remainingRequest":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js!D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\vuecli2\\src\\components\\SettingPassWord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\vuecli2\\src\\components\\SettingPassWord.vue","mtime":1659406227818},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js","mtime":1657605656602},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js","mtime":1657605655389}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'SettingPassWord',\n  data: function data() {\n    return {\n      oldPassWord: '',\n      newPassWord: '',\n      newPassWord1: '',\n      isOk: false,\n      isInconsistent: false,\n      msg: '两次输入的新密码不一致或新密码为空',\n      msg1: '新密码不可为空' // 必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间\n\n    };\n  },\n  methods: {\n    consistent: function consistent() {\n      if (this.newPassWord == this.newPassWord1 && this.newPassWord != '' && this.newPassWord1 != '') {\n        this.isInconsistent = false;\n      } else {\n        this.isInconsistent = true;\n      }\n    },\n    // 验证新密码\n    verifyPassWord: function verifyPassWord() {\n      var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/;\n\n      if (this.newPassWord != '') {\n        this.isOk = false;\n\n        if (reg.test(this.newPassWord)) {\n          this.isOk = false;\n        } else {\n          this.msg1 = '必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间';\n          this.$nextTick(function () {\n            this.isOk = true;\n          });\n        }\n      } else {\n        this.isOk = true;\n      }\n    },\n    settingFinish: function settingFinish() {\n      this.consistent();\n      this.verifyPassWord();\n      this.$nextTick(function () {\n        var _this = this;\n\n        if (!this.isInconsistent && !this.isOk) {\n          this.$store.state({\n            user: 'user'\n          });\n\n          if (this.oldPassWord == user.passWord) {\n            this.$axios.post('http://loclhost:8080/user/').then(function (res) {\n              _this.$router.back();\n            }, function (error) {\n              console.log(error.message);\n            });\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["SettingPassWord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,KAJA;AAKA,MAAA,cAAA,EAAA,KALA;AAMA,MAAA,GAAA,EAAA,mBANA;AAOA,MAAA,IAAA,EAAA,SAPA,CAQA;;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,YAAA,IAAA,KAAA,WAAA,IAAA,EAAA,IAAA,KAAA,YAAA,IAAA,EAAA,EAAA;AACA,aAAA,cAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,cAAA,GAAA,IAAA;AACA;AACA,KAPA;AAQA;AACA,IAAA,cATA,4BASA;AACA,UAAA,GAAA,GAAA,yCAAA;;AACA,UAAA,KAAA,WAAA,IAAA,EAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,EAAA;AACA,eAAA,IAAA,GAAA,KAAA;AACA,SAFA,MAEA;AACA,eAAA,IAAA,GAAA,oCAAA;AACA,eAAA,SAAA,CAAA,YAAA;AACA,iBAAA,IAAA,GAAA,IAAA;AACA,WAFA;AAGA;AACA,OAVA,MAUA;AACA,aAAA,IAAA,GAAA,IAAA;AACA;AACA,KAxBA;AAyBA,IAAA,aAzBA,2BAyBA;AACA,WAAA,UAAA;AACA,WAAA,cAAA;AACA,WAAA,SAAA,CAAA,YAAA;AAAA;;AACA,YAAA,CAAA,KAAA,cAAA,IAAA,CAAA,KAAA,IAAA,EAAA;AACA,eAAA,MAAA,CAAA,KAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;;AACA,cAAA,KAAA,WAAA,IAAA,IAAA,CAAA,QAAA,EAAA;AACA,iBAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,aAHA,EAIA,UAAA,KAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA;AACA,aANA;AAOA;AACA;AACA,OAbA;AAcA;AA1CA;AAdA,CAAA","sourcesContent":["<template>\r\n  <div >\r\n    <span>请输入当前用户密码</span><br>\r\n    <input type=\"password\" v-model=\"oldPassWord\"><br>\r\n    <span>请输入新密码</span><br>\r\n    <input type=\"password\" v-model=\"newPassWord\" @input=\"verifyPassWord\" @blur=\"verifyPassWord\"><br>\r\n    <span v-if=\"isOk\" style=\"font-size:10px;color:red;\">{{msg1}}</span><br>\r\n    <span>请再次输入新密码</span><br>\r\n    <input type=\"password\" v-model=\"newPassWord1\" @blur=\"consistent\" @input=\"consistent\"><br>\r\n    <span v-if=\"isInconsistent\" style=\"font-size:10px;color:red;\">{{msg}}</span><br>\r\n    <button @click=\"settingFinish\">修改完成</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'SettingPassWord',\r\n    data(){\r\n      return {\r\n        oldPassWord:'',\r\n        newPassWord:'',\r\n        newPassWord1:'',\r\n        isOk:false,\r\n        isInconsistent:false,\r\n        msg:'两次输入的新密码不一致或新密码为空',\r\n        msg1:'新密码不可为空'\r\n        // 必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间\r\n      }\r\n    },\r\n    methods: {\r\n      consistent(){\r\n        if(this.newPassWord==this.newPassWord1 &&this.newPassWord!=''&&this.newPassWord1!=''){\r\n          this.isInconsistent=false\r\n        }else{\r\n          this.isInconsistent=true\r\n        }\r\n      },\r\n      // 验证新密码\r\n      verifyPassWord(){\r\n        let reg=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\r\n        if(this.newPassWord!=''){\r\n          this.isOk=false\r\n          if (reg.test(this.newPassWord)) {\r\n            this.isOk=false\r\n          }else{\r\n            this.msg1='必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间'\r\n            this.$nextTick(function(){\r\n              this.isOk=true\r\n            })\r\n          }\r\n        }else{\r\n          this.isOk=true\r\n        }\r\n      },\r\n      settingFinish(){\r\n        this.consistent()\r\n        this.verifyPassWord()\r\n        this.$nextTick(function(){\r\n          if(!this.isInconsistent&&!this.isOk){\r\n            this.$store.state({user:'user'})\r\n            if(this.oldPassWord==user.passWord){\r\n              this.$axios.post('http://loclhost:8080/user/')\r\n              .then(res=>{\r\n                this.$router.back()\r\n              },\r\n              error=>{\r\n                console.log(error.message);\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput{\r\n    margin-top: 20px;\r\n    height: 26px;\r\n}\r\nspan{\r\n    margin-top: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}