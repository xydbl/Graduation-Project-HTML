{"remainingRequest":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js!D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\vuecli2\\src\\components\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\vuecli2\\src\\components\\Register.vue","mtime":1659923347147},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js","mtime":1657605656602},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js","mtime":1657605655389},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\babel-loader\\lib\\index.js","mtime":1657605656602},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657605649950},{"path":"D:\\HBuilderProjects\\vuecli2\\node_modules\\vue-loader\\lib\\index.js","mtime":1657605655389}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'Register',\n  data: function data() {\n    return {\n      user: {\n        userName: '',\n        passWord: '',\n        checkPass: '',\n        userType: '5',\n        isTrue: true,\n        verifyPass: true,\n        verifyCheckPass: true\n      },\n      msg: '用户名不可用',\n      msg1: '密码不可为空',\n      msg2: '密码不一致'\n    };\n  },\n  methods: {\n    // 验证用户名是否可用\n    registerSelect: function registerSelect() {\n      var _this = this;\n\n      axios.post('http://localhost:8080/user/registerSelect', {\n        username: this.user.userName\n      }).then(function (res) {\n        if (!_this.user.isTrue) {\n          _this.msg = '用户名不可用';\n        }\n\n        _this.user.isTrue = res.data;\n      }, function (error) {\n        console.log(error.message);\n      });\n    },\n    // 验证用户名是否为空\n    verifyUserName: function verifyUserName() {\n      if (this.user.userName == '') {\n        this.msg = '用户名为空';\n        this.$nextTick(function () {\n          this.user.isTrue = false;\n        });\n      } else {\n        this.registerSelect();\n      }\n    },\n    // 验证密码是否符合要求\n    verifyPassWord: function verifyPassWord() {\n      var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/;\n\n      if (this.user.passWord != '') {\n        if (reg.test(this.user.passWord)) {\n          this.user.verifyPass = true;\n        } else {\n          this.msg1 = '必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间';\n          this.$nextTick(function () {\n            this.user.verifyPass = false;\n          });\n        }\n      } else {\n        this.msg1 = '密码不可为空';\n        this.$nextTick(function () {\n          this.user.verifyPass = false;\n        });\n      }\n    },\n    // 验证密码是否一致\n    verifyCheckPassWord: function verifyCheckPassWord() {\n      if (this.user.passWord != this.user.checkPass) {\n        this.user.verifyCheckPass = false;\n      } else {\n        this.user.verifyCheckPass = true;\n      }\n    },\n    // 注册验证\n    verifyLogin: function verifyLogin() {\n      this.verifyUserName();\n      this.verifyPassWord();\n      this.$nextTick(function () {\n        if (this.user.isTrue == true && this.user.verifyPass == true && this.user.verifyCheckPass == true) {\n          this.login();\n        } else {\n          return false;\n        }\n      });\n    },\n    //注册\n    login: function login() {\n      var _this2 = this;\n\n      axios.post('http://localhost:8080/user/adduser', {\n        username: this.user.userName,\n        password: this.user.passWord,\n        usertype: this.user.userType,\n        date1: new Date(),\n        islogin: 0\n      }).then(function (res) {\n        _this2.$router.push({\n          path: '/login'\n        });\n\n        alert('注册成功');\n      }, function (error) {\n        alert('注册失败');\n        console.log(error.message);\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"resgit\">\r\n    <div class=\"dv1\" style=\"position: relative;top:30px\">\r\n      <span>用户名</span><input type=\"text\" v-model=\"user.userName\" @input=\"verifyUserName\"  @blur=\"verifyUserName\"><br>\r\n      <div v-if=\"!user.isTrue\" style=\"color:red;font-size:12px\">{{msg}}</div>\r\n    </div>\r\n    <div class=\"dv1\" style=\"position: relative;top:90px\">\r\n      <span>密码</span><input type=\"password\" v-model=\"user.passWord\" @input=\"verifyPassWord\" @blur=\"verifyPassWord\">\r\n      <div v-if=\"!user.verifyPass\" style=\"color:red;font-size:12px\">{{msg1}}</div>\r\n    </div>\r\n    <div class=\"dv1\" style=\"position: relative;top:80px\">\r\n      <span>确认密码</span><input type=\"password\" v-model=\"user.checkPass\" @input=\"verifyCheckPassWord\" @blur=\"verifyCheckPassWord\">\r\n      <div v-if=\"!user.verifyCheckPass\" style=\"color:red;font-size:12px\">{{msg2}}</div>\r\n    </div>\r\n    <input type=\"button\" value=\"注册\" @click=\"verifyLogin\" style=\"position: relative;top:60px\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name:'Register',\r\n    data() {\r\n      return {\r\n        user: {\r\n            userName:'',\r\n            passWord: '',\r\n            checkPass: '',\r\n            userType:'5',\r\n            isTrue:true,\r\n            verifyPass:true,\r\n            verifyCheckPass:true\r\n        },\r\n        msg:'用户名不可用',\r\n        msg1:'密码不可为空',\r\n        msg2:'密码不一致',\r\n      };\r\n    },\r\n    methods: {\r\n      // 验证用户名是否可用\r\n      registerSelect(){\r\n        axios.post('http://localhost:8080/user/registerSelect',{\r\n          username:this.user.userName\r\n        })\r\n        .then(res=>{\r\n          if(!this.user.isTrue){\r\n            this.msg='用户名不可用'\r\n          }\r\n          this.user.isTrue= res.data\r\n        },\r\n        error=>{\r\n          console.log(error.message)\r\n        })\r\n      },\r\n      // 验证用户名是否为空\r\n      verifyUserName(){\r\n        if(this.user.userName==''){\r\n          this.msg='用户名为空'\r\n          this.$nextTick(function(){\r\n            this.user.isTrue=false\r\n          })\r\n        }else{\r\n          this.registerSelect()\r\n        }\r\n      },\r\n      // 验证密码是否符合要求\r\n      verifyPassWord(){\r\n        let reg=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\r\n        if(this.user.passWord!=''){\r\n          if(reg.test(this.user.passWord)){\r\n            this.user.verifyPass=true\r\n          }else{\r\n            this.msg1='必须包含大小写字母和数字的组合,不能使用特殊字符,长度在6-15之间'\r\n            this.$nextTick(function(){\r\n              this.user.verifyPass=false\r\n            })\r\n          }\r\n        }else{\r\n          this.msg1='密码不可为空'\r\n          this.$nextTick(function(){\r\n            this.user.verifyPass=false\r\n          })\r\n        }\r\n      },\r\n      // 验证密码是否一致\r\n      verifyCheckPassWord(){\r\n        \r\n        if(this.user.passWord!=this.user.checkPass){\r\n          this.user.verifyCheckPass=false\r\n        }else{\r\n          this.user.verifyCheckPass=true\r\n        }\r\n      },\r\n      // 注册验证\r\n      verifyLogin(){\r\n        this.verifyUserName()\r\n        this.verifyPassWord()\r\n        this.$nextTick(function(){\r\n          if(this.user.isTrue==true&&this.user.verifyPass==true&&this.user.verifyCheckPass==true){\r\n            this.login()\r\n          }else{\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      //注册\r\n      login() {\r\n        axios.post('http://localhost:8080/user/adduser',\r\n          {\r\n            username:this.user.userName,\r\n            password:this.user.passWord,\r\n            usertype:this.user.userType,\r\n            date1:new Date(),\r\n            islogin:0\r\n          }\r\n        ).then(res=>{\r\n          this.$router.push({path:'/login'})\r\n          alert('注册成功')\r\n        },error=>{\r\n          alert('注册失败')\r\n          console.log(error.message);\r\n        })\r\n      },\r\n      \r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.resgit{\r\n  position: relative;\r\n  top: 150px;\r\n  left: 600px;\r\n  height: 400px;\r\n  width: 420px;\r\n  text-align: right;\r\n  padding-right: 40px;\r\n  box-shadow: 4px 4px 15px #666;\r\n}\r\ninput{\r\n  height: 40px;\r\n  width: 300px;\r\n}\r\n.dv1{\r\n  height: 80px;\r\n}\r\nspan{\r\n\tpadding-right: 15px;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}