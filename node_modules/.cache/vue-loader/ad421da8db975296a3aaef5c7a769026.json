{"remainingRequest":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\src\\components\\BlogType.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\src\\components\\BlogType.vue","mtime":1660895062783},{"path":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660272402559},{"path":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\node_modules\\babel-loader\\lib\\index.js","mtime":1660272402348},{"path":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660272402559},{"path":"D:\\HBuilderProjects\\vue2\\Graduation-Project-HTML\\node_modules\\vue-loader\\lib\\index.js","mtime":1660272406551}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name:'BlogType',\r\n    data() {\r\n        return {\r\n            multipleSelection: [],\r\n            tableData:[]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleSelection(rows) {\r\n            if (rows) {\r\n            rows.forEach(row => {\r\n                this.$refs.multipleTable.toggleRowSelection(row);\r\n            });\r\n            } else {\r\n            this.$refs.multipleTable.clearSelection();\r\n            }\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n            // console.log(this.multipleSelection);\r\n        },\r\n        getBlogTypeList(){\r\n            this.$axios.get('http://localhost:8081/api/blogType/findAll')\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.tableData=res.data\r\n            },error=>{\r\n                console.log(error.message);\r\n            })\r\n        },\r\n        inputType(li){\r\n            console.log(li);\r\n        },\r\n        updateBlog(li){\r\n            if(li.isEdit==null||li.isEdit==undefined){\r\n                this.$set(li,'isEdit',true)\r\n            }else{\r\n                li.isEdit=true\r\n            }\r\n            this.$nextTick(function(){\r\n                this.$refs.update1.focus()\r\n            })\r\n        },\r\n\r\n        updateEnd(li){\r\n            li.isEdit=false\r\n            // console.log(li)\r\n            this.$axios.post('http://localhost:8081/api/blogType/update',{\r\n                tid:li.tid,\r\n                blogtype:li.blogtype\r\n            })\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.getBlogTypeList()\r\n                this.$message.success('修改成功')\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('失败')\r\n            })\r\n        },\r\n        del(tid){\r\n            let sure=confirm('确认删除吗？')\r\n            if (!sure) {\r\n                return false\r\n            }\r\n            this.$axios.get(`http://localhost:8081/api/blogType/del/${tid}`)\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.$message.success('删除成功')\r\n                this.getBlogTypeList()\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('删除失败')\r\n            })\r\n        },\r\n        delAll(){\r\n            let ids=[]\r\n            this.multipleSelection.forEach(li=>{\r\n                ids.push(li.tid)\r\n            })\r\n            if(ids==''){\r\n                return false\r\n            }\r\n            this.$axios.post('http://localhost:8081/api/blogType/delAll',ids)\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.$message.success(\"删除成功\")\r\n                this.getBlogTypeList()\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('删除失败')\r\n            })\r\n        },\r\n        end(li){\r\n            setTimeout(() => {\r\n                li.isEdit=false\r\n            }, 200);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getBlogTypeList()\r\n    },\r\n}\r\n",{"version":3,"sources":["BlogType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"BlogType.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-top: 20px;position:relative;left:60px;\">\r\n        <el-button @click=\"toggleSelection()\">取消选择</el-button>\r\n        <el-button >删除选中</el-button>\r\n    </div>\r\n    <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 700px;position:relative;left:60px;top:20px\"\r\n        row-key=\"tid\"\r\n        @selection-change=\"handleSelectionChange\">\r\n\r\n        <el-table-column\r\n        type=\"selection\"\r\n        width=\"55\">\r\n        </el-table-column>\r\n\r\n        <el-table-column \r\n        prop=\"blogtype\"\r\n        label=\"类型\"\r\n        width=\"320\" align=\"center\" height=\"90px\">\r\n            <template slot-scope=\"scope\">\r\n                <span v-if=\"!scope.row.isEdit\">{{scope.row.blogtype}}</span>\r\n                <input type=\"text\" v-else v-model=\"scope.row.blogtype\" @blur=\"end(scope.row)\" ref=\"update1\">\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\">\r\n            <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" @click=\"updateBlog(scope.row)\" v-if=\"!scope.row.isEdit\">修改</el-button>\r\n                <el-button size=\"mini\" v-if=\"scope.row.isEdit\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"updateEnd(scope.row)\" v-if=\"scope.row.isEdit\" >修改完成</el-button>\r\n                <el-button size=\"mini\" @click=\"del(scope.row.tid)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'BlogType',\r\n    data() {\r\n        return {\r\n            multipleSelection: [],\r\n            tableData:[]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleSelection(rows) {\r\n            if (rows) {\r\n            rows.forEach(row => {\r\n                this.$refs.multipleTable.toggleRowSelection(row);\r\n            });\r\n            } else {\r\n            this.$refs.multipleTable.clearSelection();\r\n            }\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n            // console.log(this.multipleSelection);\r\n        },\r\n        getBlogTypeList(){\r\n            this.$axios.get('http://localhost:8081/api/blogType/findAll')\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.tableData=res.data\r\n            },error=>{\r\n                console.log(error.message);\r\n            })\r\n        },\r\n        inputType(li){\r\n            console.log(li);\r\n        },\r\n        updateBlog(li){\r\n            if(li.isEdit==null||li.isEdit==undefined){\r\n                this.$set(li,'isEdit',true)\r\n            }else{\r\n                li.isEdit=true\r\n            }\r\n            this.$nextTick(function(){\r\n                this.$refs.update1.focus()\r\n            })\r\n        },\r\n\r\n        updateEnd(li){\r\n            li.isEdit=false\r\n            // console.log(li)\r\n            this.$axios.post('http://localhost:8081/api/blogType/update',{\r\n                tid:li.tid,\r\n                blogtype:li.blogtype\r\n            })\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.getBlogTypeList()\r\n                this.$message.success('修改成功')\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('失败')\r\n            })\r\n        },\r\n        del(tid){\r\n            let sure=confirm('确认删除吗？')\r\n            if (!sure) {\r\n                return false\r\n            }\r\n            this.$axios.get(`http://localhost:8081/api/blogType/del/${tid}`)\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.$message.success('删除成功')\r\n                this.getBlogTypeList()\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('删除失败')\r\n            })\r\n        },\r\n        delAll(){\r\n            let ids=[]\r\n            this.multipleSelection.forEach(li=>{\r\n                ids.push(li.tid)\r\n            })\r\n            if(ids==''){\r\n                return false\r\n            }\r\n            this.$axios.post('http://localhost:8081/api/blogType/delAll',ids)\r\n            .then(res=>{\r\n                // console.log(res.data);\r\n                this.$message.success(\"删除成功\")\r\n                this.getBlogTypeList()\r\n            },error=>{\r\n                console.log(error.message);\r\n                this.$message.warning('删除失败')\r\n            })\r\n        },\r\n        end(li){\r\n            setTimeout(() => {\r\n                li.isEdit=false\r\n            }, 200);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getBlogTypeList()\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}